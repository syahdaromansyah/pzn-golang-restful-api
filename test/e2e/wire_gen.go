// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package e2e

import (
	"github.com/google/wire"
	"github.com/julienschmidt/httprouter"
	"github.com/sirupsen/logrus"
	"github.com/syahdaromansyah/pzn-golang-restful-api/internal/config"
	"github.com/syahdaromansyah/pzn-golang-restful-api/internal/controller/http"
	"github.com/syahdaromansyah/pzn-golang-restful-api/internal/controller/http/route"
	"github.com/syahdaromansyah/pzn-golang-restful-api/internal/db"
	"github.com/syahdaromansyah/pzn-golang-restful-api/internal/repository"
	"github.com/syahdaromansyah/pzn-golang-restful-api/internal/security"
	"github.com/syahdaromansyah/pzn-golang-restful-api/internal/usecase"
)

// Injectors from injector_for_testing.go:

func InitializeControllerForTesting(appConfig *config.AppConfig, database db.PgxPool, logger *logrus.Logger, router *httprouter.Router) route.RouteConfig {
	validation := security.NewValidationImpl()
	idGenerator := security.NewIdGenImpl()
	categoryRepository := repository.NewCategoryRepositoryImpl(idGenerator)
	categoryUseCase := usecase.NewCategoryUseCaseImpl(database, validation, categoryRepository)
	categoryController := http.NewCategoryControllerImpl(categoryUseCase)
	routeConfig := route.NewRouteConfigHttpRouter(router, categoryController)
	return routeConfig
}

// injector_for_testing.go:

var repositorySet = wire.NewSet(repository.NewCategoryRepositoryImpl)

var useCaseSet = wire.NewSet(usecase.NewCategoryUseCaseImpl)

var controllerSet = wire.NewSet(http.NewCategoryControllerImpl)
